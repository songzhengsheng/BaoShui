
@{
    ViewBag.Title = "合同列表";
    Layout = "~/Views/Shared/_LayoutBootstrapTable.cshtml";
}
@using NFine.Code

<script src="~/Content/layer/layer.js"></script>
<script src="~/Content/bootstraptableedu/bootstrap-table-export.js"></script>
<script src="~/Content/bootstraptableedu/tableExport.js"></script>
<script src="~/Content/My97DatePicker/WdatePicker.js"></script>

<div class="panel-body">
    <div id="toolbar" class="btn-group">
        <button id="btn_add" type="button" class="btn btn-primary" onclick="Add(0)">
            <span class="glyphicon glyphicon-plus" aria-hidden="true"></span>新增
        </button>
        <button type="button" class="btn btn-info" data-toggle="modal" data-target="#myModal">
            <span class="glyphicon glyphicon-search" aria-hidden="true">  </span>查询
        </button>
    </div>
    <table id="table"></table>
</div>

<div class="modal inmodal" id="myModal" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content animated bounceInRight">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">
                    <span aria-hidden="true">&times;</span><span class="sr-only">关闭</span>
                </button>

                <h4 class="modal-title">请输入查询条件</h4>

            </div>
            <div class="modal-body">
                <form id="formSearch" class="form-horizontal">
                    <div class="form-group">
                        <div class="col-sm-5">
                            <input type="text" class="form-control" id="ContoractNumber" placeholder="合同号">
                        </div>
                        <div class="col-sm-5">
                            <input type="text" class="form-control" id="EntrustPeople" placeholder="委托人">
                        </div>
                    </div>

                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-white" data-dismiss="modal">关闭</button>
                <button type="button" id="btn_query" class="btn btn-sm btn-primary" onclick="Serach()">查询</button>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    var TableInit = function() {
        var oTableInit = new Object();
        //初始化Table
        oTableInit.Init = function() {
            $('#table').bootstrapTable({
                url: '/Contract/GetContractList', //请求后台的URL（*）
                method: 'get', //请求方式（*）
                toolbar: '#toolbar', //工具按钮用哪个容器
                striped: true, //是否显示行间隔色
                cache: false, //是否使用缓存，默认为true，所以一般情况下需要设置一下这个属性（*）
                pagination: true, //是否显示分页（*）
                sortable: true, //是否启用排序
                sortOrder: "asc", //排序方式
                queryParams: oTableInit.queryParams, //传递参数（*）
                sidePagination: "server", //分页方式：client客户端分页，server服务端分页（*）
                pageNumber: 1, //初始化加载第一页，默认第一页
                pageSize: 10, //每页的记录行数（*）
                pageList: [10, 25, 10000], //可供选择的每页的行数（*）
                search: false, //是否显示表格搜索，此搜索是客户端搜索，不会进服务端，所以，个人感觉意义不大
                strictSearch: false,
                showColumns: true, //是否显示所有的列
                showRefresh: true, //是否显示刷新按钮
                minimumCountColumns: 2, //最少允许的列数
                clickToSelect: true, //是否启用点击选中行
                // height: $(window).height() - 30,
                uniqueId: "ID", //每一行的唯一标识，一般为主键列
                showToggle: false, //是否显示详细视图和列表视图的切换按钮
                cardView: false, //是否显示详细视图
                detailView: true, //是否显示父子表

                showExport: true, //是否显示导出按钮
                buttonsAlign: "right", //按钮位置
                exportTypes: ['excel'], //导出文件类型
                Icons: 'glyphicon-export',
                exportOptions: {
                    ignoreColumn: [0, 1], //忽略某一列的索引
                    fileName: '总台帐报表', //文件名称设置
                    worksheetName: 'sheet1', //表格工作区名称
                    tableName: '总台帐报表',
                    excelstyles: ['background-color', 'color', 'font-size', 'font-weight'],

                },

                columns: [
                    {
                        width: 70,
                        title: '操作',
                        formatter: function(value, row, index) {
                            var roleid = '@OperatorProvider.Provider.GetCurrent().RoleId';
                            
                            if (row.State == "待提交审核" || row.State == "驳回") {
                                if (roleid == 7) {
                                    return '';

                                } else {
                                    return '<div class="btn-group"><button data-toggle="dropdown" class="btn btn-success btn-sm dropdown-toggle" aria-expanded="false">操作 <span class="caret"></span></button><ul class="dropdown-menu"><li><a  onclick="Del(\'' + row.Guid + '\')">删除</a></li><li><a  onclick="Add(\'' + row.Guid + '\')">编辑</a></li><li><a  onclick="Tjsh(\'' + row.Guid + '\',\'待经理审核\')">提交审核</a></li></ul></div>';

                                }
                             
                            }
                            if (row.State == "待经理审核") {
                                if (roleid == 7) {
                                    return '<div class="btn-group"><button data-toggle="dropdown" class="btn btn-success btn-sm dropdown-toggle" aria-expanded="false">操作 <span class="caret"></span></button><ul class="dropdown-menu"><li><a  onclick="Tjsh(\'' + row.Guid + '\',\'通过\')">通过</a><a  onclick="Tjsh(\'' + row.Guid + '\',\'驳回\')">驳回</a></li></ul></div>';
                                } else {
                                    return '<div class="btn-group"><button data-toggle="dropdown" class="btn btn-success btn-sm dropdown-toggle" aria-expanded="false">操作 <span class="caret"></span></button><ul class="dropdown-menu"><li><a  onclick="Tjsh(\'' + row.Guid + '\',\'待提交审核\')">撤回</a></li></ul></div>';
                                }
                             
                            }
                            if (row.State == "通过") {
                                if (roleid == 3) {
                                    return '<div class="btn-group"><button data-toggle="dropdown" class="btn btn-success btn-sm dropdown-toggle" aria-expanded="false">操作 <span class="caret"></span></button><ul class="dropdown-menu"><li><a  onclick="SuoDing(\'' + row.Guid + '\')">锁定</a></li></ul></div>';
                                } else {
                                    return '';
                                }
                             
                            }
                            else {
                                return '';
                            }
                        },


                    },

                    {

                        field: 'ContoractNumber',
                        title: '合同号',
                        formatter: function (value, row, index) {
                            if (row.ContoractNumber != null) {
                                return '<a  onclick="chakan_ht(\'' + row.Guid + '\')">' + row.ContoractNumber + '</a>';
                            }

                        }

                    }
                    ,
                    {

                        field: 'EntrustPeople',
                        title: '委托人',

                    }
                    ,
                    {
                        field: 'CreatTime',
                        title: '创建时间',
                        cellStyle: {
                            css: { "text-overflow": "ellipsis", "-moz-text-overflow": "ellipsis", "overflow": "hidden", "white-space": "nowrap" }
                        },
                        formatter: function (value, row, index) {
                            return changeDateFormat(value)
                        },
                    }
                    , {
                        field: 'LastEdiTime',
                        title: '最后修改时间',
                        cellStyle: {
                            css: { "text-overflow": "ellipsis", "-moz-text-overflow": "ellipsis", "overflow": "hidden", "white-space": "nowrap" }
                        },
                        formatter: function (value, row, index) {
                            return changeDateFormat(value)
                        },
                    }
                    ,
                    {
                        field: 'State',
                        title: '状态',
                        cellStyle: {
                            css: { "text-overflow": "ellipsis", "-moz-text-overflow": "ellipsis", "overflow": "hidden", "white-space": "nowrap" }
                        },
                        formatter: tdShowAll
                    }


                ],
                //注册加载子表的事件。注意下这里的三个参数！
                onExpandRow: function(index, row, $detail) {

                    InitSubTable(index, row, $detail);

                },
                formatLoadingMessage: function(){
                    return "请稍等，正在加载中。。。";
                }
            });
        };
        InitSubTable = function (index, row, $detail) {
            var fatherId = row.Guid;
            var fatherState = row.State;
            var cur_table = $detail.html('<table id="htxq"></table>').find('table');
            $(cur_table).bootstrapTable({
                url: '/Contract/GetContractDetailedList',
                method: 'get',
                queryParams: { contractGuid: fatherId },
                ajaxOptions: { contractGuid: fatherId },
                striped: true, //是否显示行间隔色
                cache: false, //是否使用缓存，默认为true，所以一般情况下需要设置一下这个属性（*）
                pagination: false, //是否显示分页（*）
                sortable: false, //是否启用排序
                sortOrder: "asc", //排序方式
                sidePagination: "server", //分页方式：client客户端分页，server服务端分页（*）
                pageNumber: 1, //初始化加载第一页，默认第一页
                search: false, //是否显示表格搜索，此搜索是客户端搜索，不会进服务端，所以，个人感觉意义不大
                strictSearch: false,
                showColumns: false, //是否显示所有的列
                showRefresh: false, //是否显示刷新按钮
                minimumCountColumns: 2, //最少允许的列数
                clickToSelect: true, //是否启用点击选中行
                uniqueId: "guid", //每一行的唯一标识，一般为主键列
                showToggle: false, //是否显示详细视图和列表视图的切换按钮
                cardView: false, //是否显示详细视图
                detailView: true, //是否显示父子表
                pageSize: 100,
                pageList: [10, 25],
                columns: [
                    {
                        width: 70,
                        title: '操作',
                        formatter: function (value, row, index) {
                            if (fatherState == "通过") {
                                return '';
                            } else {
                                if (row.State == "进行中") {
                                    return '<div class="btn-group"><button data-toggle="dropdown" class="btn btn-info btn-sm dropdown-toggle" aria-expanded="false">操作 <span class="caret"></span></button><ul class="dropdown-menu"><li><a  onclick="DelSon(\'' + row.Guid + '\')">删除</a></li><li><a  onclick="AddSon(\'' + row.Guid + '\')">编辑</a></li></ul></div>';

                                }
                                else {
                                    return '<div  class="btn-group"><button data-toggle="dropdown"  disabled="disabled" class="btn btn-info btn-sm dropdown-toggle" aria-expanded="false">操作 <span class="caret"></span></button></div>';
                                }
                            }
                        
                        },


                    },


                    {
                        field: 'HuoMing',
                        title: '货名',

                    },
                    {
                        field: 'DanJia',
                        title: '单价',

                    },
                    {
                        field: 'FeiMuZhongLei',
                        title: '费目种类',

                    },
                    {
                        field: 'JiLiangDanWei',
                        title: '计量单位',

                    },

                    {
                        field: 'MianDuiCunTianShu',
                        title: '免堆存天数',

                    },
                    {
                        field: 'BiaoZhi',
                        title: '堆存估算费标志',

                    },
                    {
                        field: 'Type',
                        title: '计费依据',

                    },
                    {
                        field: 'BeiZhu',
                        title: '备注',

                    }
                ],
                //无线循环取子表，直到子表里面没有记录
                onExpandRow: function (index, row, $Subdetail) {
                    FilesTable(index, row, $Subdetail);
                },

            });
        };
        FilesTable = function (index, row, $detail) {
            var CONTRACT_Guid = row.CONTRACT_Guid;
            var cur_table = $detail.html('<table id="htfile"></table>').find('table');
            $(cur_table).bootstrapTable({
                url: '/Contract/GetContractFilesList',
                method: 'get',
                queryParams: { contractGuid: CONTRACT_Guid },
                ajaxOptions: { contractGuid: CONTRACT_Guid },
                striped: true, //是否显示行间隔色
                cache: false, //是否使用缓存，默认为true，所以一般情况下需要设置一下这个属性（*）
                pagination: false, //是否显示分页（*）
                sortable: false, //是否启用排序
                sortOrder: "asc", //排序方式
                sidePagination: "server", //分页方式：client客户端分页，server服务端分页（*）
                pageNumber: 1, //初始化加载第一页，默认第一页
                search: false, //是否显示表格搜索，此搜索是客户端搜索，不会进服务端，所以，个人感觉意义不大
                strictSearch: false,
                showColumns: false, //是否显示所有的列
                showRefresh: false, //是否显示刷新按钮
                minimumCountColumns: 2, //最少允许的列数
                clickToSelect: true, //是否启用点击选中行
                uniqueId: "guid", //每一行的唯一标识，一般为主键列
                showToggle: false, //是否显示详细视图和列表视图的切换按钮
                cardView: false, //是否显示详细视图
                detailView: false, //是否显示父子表
                pageSize: 100,
                pageList: [10, 25],
                columns: [
                    {
                        width: 70,
                        title: '操作',
                        formatter: function (value, row, index) {
                            if (row.State == "进行中") {
                            return '<a  class="btn btn-danger btn-sm" onclick="DelFile(\'' + row.Guid +'\'); ">删除</a>';
                            }
                        },


                    },

                    {
                        field: 'HuoZhong',
                        title: '文件名称',
                        formatter: function (value, row, index) {
                            return '     <a href="../../' + row.path + '" download="">' + row.FileName+'</a>';

                        },
                    }

                ],
                //无线循环取子表，直到子表里面没有记录
                onExpandRow: function (index, row, $Subdetail) {
                    InitSubTable(index, row, $Subdetail);
                },

            });
        };
        //得到查询的参数
        oTableInit.queryParams = function (params) {
            var temp = {
                limit: params.limit, //页面大小
                offset: params.offset, //页码
                ContoractNumber: $("#ContoractNumber").val(),
                EntrustPeople: $("#EntrustPeople").val(),

            };
            return temp;
        };
        return oTableInit;
    };



    function Add(id) {
        layer.open({
            type: 2,
            title: "编辑合同",
            shadeClose: true,
            shade: 0.8,
            area: ['80%', '80%'],
            content: "/ck/Contract/AddContract?guid=" + id,
            btn: ['关闭'],
            yes: function (index) {
                layer.closeAll();
            },
            end: function () {
                Serach();
            }
        });
    }

    function SuoDing(guid) {
        swal({
            title: "您确定要操作这条信息吗",
            text: "操作后将无法恢复，请谨慎操作！",
            type: "warning",
            showCancelButton: true,
            confirmButtonColor: "#DD6B55",
            confirmButtonText: "锁定",
            closeOnConfirm: false
        }, function () {
            $.ajax({
                type: 'POST',
                url: '/ck/Contract/SuoDing',
                data: { guid: guid },
                dataType: 'json',
                success: function (data, textStatus) {
                    data = eval('(' + data + ')');
                    if (data.state == "success") {
                        swal("成功！", "审核成功了这条信息。", "success");
                        Serach();

                    } else {
                        swal("失败！", "请联系管理员。", "error");

                    }
                },
                error: function (xmlHttpRequest, textStatus, errorThrown) {
                }
            });


        });
    }
    //提交审核
    function Tjsh(guid, zhuangtai) {
    
        swal({
            title: "您确定要操作这条信息吗",
            text: "操作后将无法恢复，请谨慎操作！",
            type: "warning",
            showCancelButton: true,
            confirmButtonColor: "#DD6B55",
            confirmButtonText: "提交",
            closeOnConfirm: false
        }, function () {
            $.ajax({
                type: 'POST',
                url: '/ck/Contract/Tjsh',
                data: { guid: guid, zhuangtai: zhuangtai },
                dataType: 'json',
                success: function (data, textStatus) {
                  
                    if (data.state == "success") {
                        swal("成功！", data.message, "success");
                        Serach();

                    } else {
                        swal("失败！", data.message, "error");

                    }
                },
                error: function (xmlHttpRequest, textStatus, errorThrown) {
                }
            });


        });
    }
    
    //删除
    function Del(guid) {
        swal({
            title: "您确定要删除这条信息吗",
            text: "删除后将无法恢复，请谨慎操作！",
            type: "warning",
            showCancelButton: true,
            confirmButtonColor: "#DD6B55",
            confirmButtonText: "删除",
            closeOnConfirm: false
        }, function () {
            $.ajax({
                type: 'POST',
                url: '/ck/Contract/DelContract',
                data: { guid: guid },
                dataType: 'json',
                success: function (data, textStatus) {
                    data = eval('(' + data + ')');
                    if (data.state == "success") {
                        swal("删除成功！", "您已经永久删除了这条信息。", "success");
                        Serach();

                    } else {
                        swal("删除失败！", "请联系管理员。", "error");

                    }
                },
                error: function (xmlHttpRequest, textStatus, errorThrown) {
                }
            });


        });

    }

    function AddSon(id) {
        layer.open({
            type: 2,
            title: "编辑合同详细",
            shadeClose: true,
            shade: 0.8,
            area: ['80%', '80%'],
            content: "/ck/Contract/AddContractDetailed?guid=" + id,
            btn: ['关闭'],
            yes: function (index) {
                layer.closeAll();
            },
            end: function () {
                $("#htxq").bootstrapTable('refresh');

            }
        });
    }

    function DelSon(guid) {
        swal({
            title: "您确定要删除这条信息吗",
            text: "删除后将无法恢复，请谨慎操作！",
            type: "warning",
            showCancelButton: true,
            confirmButtonColor: "#DD6B55",
            confirmButtonText: "删除",
            closeOnConfirm: false
        }, function () {
            $.ajax({
                type: 'POST',
                url: '/ck/Contract/DelContractSon',
                data: { guid: guid },
                dataType: 'json',
                success: function (data, textStatus) {
                    data = eval('(' + data + ')');
                    if (data.state == "success") {
                        swal("删除成功！", "您已经永久删除了这条信息。", "success");
                        $("#htxq").bootstrapTable('refresh');

                    } else {
                        swal("删除失败！", "请联系管理员。", "error");

                    }
                },
                error: function (xmlHttpRequest, textStatus, errorThrown) {
                }
            });


        });

    }

    function DelFile(guid) {
        swal({
            title: "您确定要删除这条信息吗",
            text: "删除后将无法恢复，请谨慎操作！",
            type: "warning",
            showCancelButton: true,
            confirmButtonColor: "#DD6B55",
            confirmButtonText: "删除",
            closeOnConfirm: false
        }, function () {
            $.ajax({
                type: 'POST',
                url: '/ck/Contract/DelContractFile',
                data: { guid: guid },
                dataType: 'json',
                success: function (data, textStatus) {
                    data = eval('(' + data + ')');
                    if (data.state == "success") {
                        swal("删除成功！", "您已经永久删除了这条信息。", "success");
                        $("#htfile").bootstrapTable('refresh');

                    } else {
                        swal("删除失败！", "请联系管理员。", "error");

                    }
                },
                error: function (xmlHttpRequest, textStatus, errorThrown) {
                }
            });


        });

    }

    function chakan_ht(CONTRACT_Guid) {
        layer.open({
            type: 2,
            title: "查看合同",
            shadeClose: true,
            shade: 0.8,
            area: ['80%', '80%'],
            content: "/ck/GoodsBill/HeTong_xq?CONTRACT_Guid=" + CONTRACT_Guid,
            btn: ['关闭'],
            yes: function (index) {
                layer.close(index);
            },
            end: function () {
            }
        });
    }
</script>

<link href="~/Content/hplus/css/plugins/sweetalert/sweetalert.css" rel="stylesheet">

<script src="~/Content/hplus/js/plugins/sweetalert/sweetalert.min.js"></script>

<script>
    $(function () {
        parent.layer.closeAll();
    });
</script>