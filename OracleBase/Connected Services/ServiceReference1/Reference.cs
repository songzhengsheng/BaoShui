//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace OracleBase.ServiceReference1 {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.lygport.com.cn/tofi/", ConfigurationName="ServiceReference1.ServiceRBillSoap")]
    public interface ServiceRBillSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.lygport.com.cn/tofi/AppendRBill", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string AppendRBill(string codeuser, string password, string xmlData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.lygport.com.cn/tofi/AppendRBill", ReplyAction="*")]
        System.Threading.Tasks.Task<string> AppendRBillAsync(string codeuser, string password, string xmlData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.lygport.com.cn/tofi/DeleteRBill", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string DeleteRBill(string codeuser, string password, string codecompany, string ivno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.lygport.com.cn/tofi/DeleteRBill", ReplyAction="*")]
        System.Threading.Tasks.Task<string> DeleteRBillAsync(string codeuser, string password, string codecompany, string ivno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.lygport.com.cn/tofi/IVIsAudit", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string IVIsAudit(string codeuser, string password, string codecompany, string ivno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.lygport.com.cn/tofi/IVIsAudit", ReplyAction="*")]
        System.Threading.Tasks.Task<string> IVIsAuditAsync(string codeuser, string password, string codecompany, string ivno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.lygport.com.cn/tofi/IVIsStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string IVIsStatus(string codeuser, string password, string codecompany, string ivno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.lygport.com.cn/tofi/IVIsStatus", ReplyAction="*")]
        System.Threading.Tasks.Task<string> IVIsStatusAsync(string codeuser, string password, string codecompany, string ivno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.lygport.com.cn/tofi/IVIsFull", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string IVIsFull(string codeuser, string password, string codecompany, string ivno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.lygport.com.cn/tofi/IVIsFull", ReplyAction="*")]
        System.Threading.Tasks.Task<string> IVIsFullAsync(string codeuser, string password, string codecompany, string ivno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.lygport.com.cn/tofi/QueryClient", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet QueryClient(string codeuser, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.lygport.com.cn/tofi/QueryClient", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> QueryClientAsync(string codeuser, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.lygport.com.cn/tofi/QueryCharge", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet QueryCharge(string codeuser, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.lygport.com.cn/tofi/QueryCharge", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> QueryChargeAsync(string codeuser, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.lygport.com.cn/tofi/QueryCharge1", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet QueryCharge1(string codeuser, string password, string filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.lygport.com.cn/tofi/QueryCharge1", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> QueryCharge1Async(string codeuser, string password, string filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.lygport.com.cn/tofi/QueryChargeCompany", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet QueryChargeCompany(string codeuser, string password, string codecompany);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.lygport.com.cn/tofi/QueryChargeCompany", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> QueryChargeCompanyAsync(string codeuser, string password, string codecompany);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.lygport.com.cn/tofi/QueryCargo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet QueryCargo(string codeuser, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.lygport.com.cn/tofi/QueryCargo", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> QueryCargoAsync(string codeuser, string password);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ServiceRBillSoapChannel : OracleBase.ServiceReference1.ServiceRBillSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceRBillSoapClient : System.ServiceModel.ClientBase<OracleBase.ServiceReference1.ServiceRBillSoap>, OracleBase.ServiceReference1.ServiceRBillSoap {
        
        public ServiceRBillSoapClient() {
        }
        
        public ServiceRBillSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceRBillSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceRBillSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceRBillSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string AppendRBill(string codeuser, string password, string xmlData) {
            return base.Channel.AppendRBill(codeuser, password, xmlData);
        }
        
        public System.Threading.Tasks.Task<string> AppendRBillAsync(string codeuser, string password, string xmlData) {
            return base.Channel.AppendRBillAsync(codeuser, password, xmlData);
        }
        
        public string DeleteRBill(string codeuser, string password, string codecompany, string ivno) {
            return base.Channel.DeleteRBill(codeuser, password, codecompany, ivno);
        }
        
        public System.Threading.Tasks.Task<string> DeleteRBillAsync(string codeuser, string password, string codecompany, string ivno) {
            return base.Channel.DeleteRBillAsync(codeuser, password, codecompany, ivno);
        }
        
        public string IVIsAudit(string codeuser, string password, string codecompany, string ivno) {
            return base.Channel.IVIsAudit(codeuser, password, codecompany, ivno);
        }
        
        public System.Threading.Tasks.Task<string> IVIsAuditAsync(string codeuser, string password, string codecompany, string ivno) {
            return base.Channel.IVIsAuditAsync(codeuser, password, codecompany, ivno);
        }
        
        public string IVIsStatus(string codeuser, string password, string codecompany, string ivno) {
            return base.Channel.IVIsStatus(codeuser, password, codecompany, ivno);
        }
        
        public System.Threading.Tasks.Task<string> IVIsStatusAsync(string codeuser, string password, string codecompany, string ivno) {
            return base.Channel.IVIsStatusAsync(codeuser, password, codecompany, ivno);
        }
        
        public string IVIsFull(string codeuser, string password, string codecompany, string ivno) {
            return base.Channel.IVIsFull(codeuser, password, codecompany, ivno);
        }
        
        public System.Threading.Tasks.Task<string> IVIsFullAsync(string codeuser, string password, string codecompany, string ivno) {
            return base.Channel.IVIsFullAsync(codeuser, password, codecompany, ivno);
        }
        
        public System.Data.DataSet QueryClient(string codeuser, string password) {
            return base.Channel.QueryClient(codeuser, password);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> QueryClientAsync(string codeuser, string password) {
            return base.Channel.QueryClientAsync(codeuser, password);
        }
        
        public System.Data.DataSet QueryCharge(string codeuser, string password) {
            return base.Channel.QueryCharge(codeuser, password);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> QueryChargeAsync(string codeuser, string password) {
            return base.Channel.QueryChargeAsync(codeuser, password);
        }
        
        public System.Data.DataSet QueryCharge1(string codeuser, string password, string filter) {
            return base.Channel.QueryCharge1(codeuser, password, filter);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> QueryCharge1Async(string codeuser, string password, string filter) {
            return base.Channel.QueryCharge1Async(codeuser, password, filter);
        }
        
        public System.Data.DataSet QueryChargeCompany(string codeuser, string password, string codecompany) {
            return base.Channel.QueryChargeCompany(codeuser, password, codecompany);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> QueryChargeCompanyAsync(string codeuser, string password, string codecompany) {
            return base.Channel.QueryChargeCompanyAsync(codeuser, password, codecompany);
        }
        
        public System.Data.DataSet QueryCargo(string codeuser, string password) {
            return base.Channel.QueryCargo(codeuser, password);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> QueryCargoAsync(string codeuser, string password) {
            return base.Channel.QueryCargoAsync(codeuser, password);
        }
    }
}
